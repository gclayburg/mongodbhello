<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>mongodbhello</artifactId>
        <groupId>com.garyclayburg</groupId>
        <version>0.2</version>
    </parent>
    <artifactId>policyconsole</artifactId>
    <packaging>war</packaging>
    <name>policyconsole</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <vaadin.version>7.1.13</vaadin.version>
        <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>

        <!-- properties files to use for cargo based testing -->
        <!-- override with -Dapplication.properties=/tmp/application.properties -->
        <application.properties>${project.build.testSourceDirectory}/application.properties</application.properties>
    </properties>
    <repositories>
        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        <repository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <!-- apparently hibernate-validator needed for spring boot to create war that can be run via "java -jar" -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.2.0.Final</version>
        </dependency>

        <dependency>
            <groupId>org.vaadin.addons</groupId>
            <artifactId>refresher</artifactId>
            <version>1.2.3.7</version>
        </dependency>

        <dependency>
            <!-- vaadin4spring https://github.com/peholmst/vaadin4spring -->
            <groupId>org.vaadin.spring</groupId>
            <artifactId>spring-boot-vaadin</artifactId>
            <version>0.0.2-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        <!--
          Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).

          For widgetset compilation, vaadin-client-compiler is automatically added on the
          compilation classpath by vaadin-maven-plugin so normally there is no need for an
          explicit dependency.
        -->
        <!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.garyclayburg</groupId>
            <artifactId>service-core</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}/src/main/webapp/VAADIN/</directory>
                            <includes>
                                <directory>gwt-unitCache/**</directory> <!-- avoid copying around these resources during regular builds -->
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                    <excludeDefaultDirectories>false</excludeDefaultDirectories>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <packagingExcludes>VAADIN/gwt-unitCache/*</packagingExcludes> <!-- keep war skinny -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.15.v20140411</version>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.vaadin</groupId>
                                        <artifactId>vaadin-maven-plugin</artifactId>
                                        <versionRange>[7.1.8,)</versionRange>
                                        <goals>
                                            <goal>resources</goal>
                                            <goal>update-widgetset</goal>
                                            <goal>compile</goal>
                                            <goal>update-theme</goal>
                                            <goal>compile-theme</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>compile-vaadin-widgetsets</id>
            <!-- to save build time, enable this profile only when installing a new widgetset or changing one-->
            <build>
                <plugins>
                    <!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
                    <!-- directory is cleaned properly -->

                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.4.1</version>
                        <!-- clear out all the generated vaadin/gwt stuff -->

                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${basedir}/src/main/webapp/VAADIN/</directory>
                                    <includes>
                                        <directory>gwt-unitCache/**</directory> <!-- files will accumulate here if they aren't cleaned -->
                                        <directory>widgetsets/**</directory> <!-- compiled widgets, needed at runtime -->
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                            <excludeDefaultDirectories>false</excludeDefaultDirectories>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <version>${vaadin.plugin.version}</version>
                        <configuration>
                            <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                            <!-- <runTarget>mobilemail</runTarget> -->
                            <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This
                                way compatible with Vaadin eclipse plugin. -->
                            <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
                            </webappDirectory>
                            <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
                            </hostedWebapp>
                            <noServer>true</noServer>
                            <!-- Remove draftCompile when project is ready -->
                            <draftCompile>false</draftCompile>
                            <compileReport>true</compileReport>
                            <style>OBF</style>
                            <strict>true</strict>
                            <runTarget>http://localhost:8080/</runTarget>
                        </configuration>
                        <executions>
                            <execution>
                                <configuration>
                                    <!-- if you don't specify any modules, the plugin will find them -->
                                    <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module>
                                        </modules> -->
                                </configuration>
                                <goals>
                                    <goal>clean</goal>
                                    <goal>resources</goal>
                                    <goal>update-theme</goal>
                                    <goal>update-widgetset</goal>
                                    <goal>compile-theme</goal>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <profile>
            <id>server-tomcat7</id>
            <!-- verify that basic "ping" of the console works on tomcat 7-->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.4.2</version>
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <!--<goal>run</goal>-->
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>

                        </executions>
                        <configuration>
                            <container>
                                <containerId>tomcat7x</containerId>
                                <zipUrlInstaller>
                                    <url>
                                        http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.42/bin/apache-tomcat-7.0.42.zip
                                    </url>
                                    <downloadDir>${project.build.directory}/downloads</downloadDir>
                                    <extractDir>${java.io.tmpdir}</extractDir>
                                </zipUrlInstaller>
                            </container>
                            <deployables>
                                <deployable>
                                    <!--<groupId>com.garyclayburg</groupId>-->
                                    <!--<artifactId>userconsole</artifactId>-->
                                    <!--<location>${project.build.directory}/${project.build.finalName}.${project.packaging}</location>-->
                                    <!--<pingURL>http://localhost:port/mycontext/index.html</pingURL>-->

                                    <properties>
                                        <context>policyconsole</context> <!-- deploy war in root console so that app appears at http://localhost:8085/console/start instead of http://localhost:8085/userconsole/console/start -->
                                    </properties>
                                    <type>war</type>
                                    <pingURL>http://localhost:8085/policyconsole/console/start</pingURL>
                                    <pingTimeout>100000</pingTimeout>
                                </deployable>
                            </deployables>
                            <configuration>
                                <properties>
                                    <cargo.servlet.port>8085</cargo.servlet.port>
                                    <cargo.tomcat.ajp.port>8086</cargo.tomcat.ajp.port>
                                </properties>
                                <configfiles>
                                    <configfile>
                                        <!--<file>${project.build.testSourceDirectory}/application.properties</file>-->
                                        <file>${application.properties}</file>
                                        <todir>config</todir>
                                    </configfile>
                                </configfiles>
                            </configuration>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jetty-run</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>8.1.15.v20140411</version>

                        <executions>
                            <execution>
                                <id>jetty-run</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <systemProperty>
                                            <name>spring.config.location</name>
                                            <value>file:/home/gclaybur/dev/visualSyncSDK/identitypolicy/config/application.properties</value>
                                        </systemProperty>
                                    </systemProperties>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
